// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(HeatingContext))]
    [Migration("20190607004611_bigmigration")]
    partial class bigmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataAccessLayer.Entities.CommunicationUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("IPAddress");

                    b.HasKey("Id");

                    b.ToTable("CommunicationUnits");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CommunicationUnitId");

                    b.Property<bool>("IO");

                    b.Property<string>("Name");

                    b.Property<int?>("RoomId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationUnitId");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Data");

                    b.Property<int>("DeviceId");

                    b.Property<bool>("IsNan");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CoolingEnable");

                    b.Property<float>("DailySetpoint");

                    b.Property<bool>("HeatingEnable");

                    b.Property<string>("Name");

                    b.Property<float>("NightlySetpoint");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Device", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.CommunicationUnit", "CommunicationUnit")
                        .WithMany()
                        .HasForeignKey("CommunicationUnitId");

                    b.HasOne("DataAccessLayer.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Log", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
